---
import { cva } from "class-variance-authority";
import type { HTMLAttributes } from "astro/types";

const linkVariants = cva(
    "flex items-center justify-center gap-2 whitespace-nowrap text-zinc-100 transitionSetting",
    {
        variants:{
            variant:{
                default: 
                    "bg-zinc-900 hover:bg-zinc-800 border border-zinc-800 hover:border-zinc-700",
                destructive:
                    "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
                outline:
                    "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
                secondary:
                    "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
                ghost:
                    "hover:bg-accent hover:text-accent-foreground",
                link:
                    "text-primary underline-offset-4 hover:underline",
            },
            size: {
                default: "h-9 px-4 py-2 rounded-2xl",
                sm: "h-8 rounded-xl px-3 text-sm",
                lg: "h-11 rounded-2xl px-4 py-2",
                icon: "h-9 w-9",
            },
            defaultVariants: {
                variant: "default",
                size: "default",
            }
        },
    }
)

interface Props extends HTMLAttributes<"a"> {
    href: string
    variant?: "default" | "destructive" | "outline" | "secondary" | "ghost" | "link";
    size?: "default" | "sm" | "lg" | "icon";
}
const { href, variant, size, ...props } = Astro.props as Props
---

<a class={(linkVariants({variant, size}))} {...props} href={href}>
    <slot />
</a>
